#!/bin/sh

#
# Copyright Â© 2015-2021 the original authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

##############################################################################
#
#   Gradle start up script for POSIX generated by Gradle.
#
#   Important for running:
#
#   (1) You need a POSIX-compliant shell to run this script.
#       Busybox and similar reduced shells will NOT work.
#
#   (2) This script is generated by Gradle and should not be edited manually.
#
##############################################################################

# Resolve links: $0 may be a link
app_path=$0

while [ -h "$app_path" ]; do
    ls=$(ls -ld "$app_path")
    link=$(expr "$ls" : '.*-> \(.*\)$')
    if expr "$link" : '/.*' > /dev/null; then
        app_path="$link"
    else
        app_path=$(dirname "$app_path")/"$link"
    fi
done

# Determine the app's home directory
APP_HOME=$(cd "$(dirname "$app_path")" && pwd -P)

# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.
DEFAULT_JVM_OPTS=""

# OS specific support. $var must be set to either true or false.
cygwin=false
msys=false
darwin=false
nonstop=false
case "$(uname)" in
    CYGWIN* ) cygwin=true ;;
    MINGW*  ) msys=true ;;
    Darwin* ) darwin=true ;;
    NONSTOP* ) nonstop=true ;;
esac

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/bin/java" ]; then
        JAVACMD="$JAVA_HOME/bin/java"
    else
        echo "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME" >&2
        exit 1
    fi
else
    JAVACMD=$(command -v java)
    if [ -z "$JAVACMD" ]; then
        echo "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH." >&2
        exit 1
    fi
fi

# Increase the maximum file descriptors if possible.
MAX_FD="maximum"
if [ "$cygwin" = false ] && [ "$msys" = false ] && [ "$darwin" = false ] && [ "$nonstop" = false ]; then
    if [ "$MAX_FD" = "maximum" ]; then
        MAX_FD=$(ulimit -H -n)
        ulimit -n "$MAX_FD" || echo "Could not set maximum file descriptor limit to $MAX_FD"
    fi
fi

CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar

# For Cygwin, switch paths to Windows format before running java
if $cygwin; then
    APP_HOME=$(cygpath --path --mixed "$APP_HOME")
    CLASSPATH=$(cygpath --path --mixed "$CLASSPATH")
    JAVACMD=$(cygpath --unix "$JAVACMD")
fi

# Collect all arguments for the java command, stacking in reverse order:
set -- \
    "-Dorg.gradle.appname=gradlew" \
    -classpath "$CLASSPATH" \
    org.gradle.wrapper.GradleWrapperMain \
    "$@"

# Execute the JVM
exec "$JAVACMD" "$@"
